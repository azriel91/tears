on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'

name: CI

jobs:
  audit:
    name: Audit
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/audit@v1
        name: Audit Rust Dependencies
        with:
          denyWarnings: true
          createIssues: false

  licenses:
    name: Licenses
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: EmbarkStudios/cargo-deny-action@v2

    - name: cargo-about cache
      id: cargo-about-cache
      uses: actions/cache@v4
      with:
        path: ~/.cargo/bin/cargo-about
        key: cargo-about-${{ runner.os }}

    - name: cargo-about install
      if: steps.cargo-about-cache.outputs.cache-hit != 'true'
      run: cargo install --locked cargo-about

    - name: cargo-about generate licenses
      run: cargo about generate --workspace about.hbs > doc/src/licenses.html

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          components: rustfmt

      - run: cargo fmt --all -- --check

  docs_and_spell_check:
    name: Docs and Spell Check
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      RUSTDOCFLAGS: "-Dwarnings"
    steps:
      - name: Checkout Actions Repository
        uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - name: Check spelling
        uses: crate-ci/typos@master

      - run: cargo doc --no-deps

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          components: clippy

      - name: 'Run clippy (client side graphviz)'
        run: |
          cargo clippy --workspace -- -D warnings

  build_and_test_linux:
    name: Build and Test (Linux)
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - name: 'Build and test'
        run: cargo test --workspace

  build_webapp_linux_cargo_leptos:
    name: Build Playground (Linux, cargo-leptos)
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - name: 'Install Rust'
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          targets: wasm32-unknown-unknown

      - name: cargo-leptos cache
        id: cargo-leptos-cache
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin/cargo-leptos
          key: cargo-leptos-${{ runner.os }}

      - name: cargo-leptos install
        if: steps.cargo-leptos-cache.outputs.cache-hit != 'true'
        run: cargo install cargo-leptos

      - name: 'Build webapp'
        working-directory: ./webapp
        run: cargo leptos build -v

  build_webapp_linux_trunk:
    name: Build Playground (Linux, trunk)
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - name: 'Install Rust'
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          targets: wasm32-unknown-unknown

      - name: trunkrs cache
        id: trunkrs-cache
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin/trunk
          key: trunk-${{ runner.os }}

      - name: trunk install
        if: steps.trunkrs-cache.outputs.cache-hit != 'true'
        run: cargo install --locked trunk

      - name: 'Build webapp'
        working-directory: ./webapp
        run: trunk build -v

  build_and_test_windows:
    name: Build and Test (Windows)
    runs-on: windows-latest
    timeout-minutes: 30
    steps:
      - name: Prepare symlink configuration
        run: git config --global core.symlinks true

      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - name: 'Build and test'
        run: cargo test --workspace

  build_webapp_windows:
    name: Build Playground (Windows, cargo-leptos)
    runs-on: windows-latest
    timeout-minutes: 30
    steps:
      - name: Prepare symlink configuration
        run: git config --global core.symlinks true

      - uses: actions/checkout@v4
      - name: 'Install Rust'
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          targets: wasm32-unknown-unknown

      - name: cargo-leptos cache
        id: cargo-leptos-cache
        uses: actions/cache@v4
        with:
          path: 'C:\Users\runneradmin\.cargo\bin\cargo-leptos.exe'
          key: cargo-leptos-${{ runner.os }}

      - name: cargo-leptos install
        if: steps.cargo-leptos-cache.outputs.cache-hit != 'true'
        # --locked: fix is in-progress at https://github.com/leptos-rs/cargo-leptos/pull/274
        run: |-
          cargo install cargo-leptos --locked

      - name: 'Build webapp'
        working-directory: ./webapp
        run: cargo leptos build -v
